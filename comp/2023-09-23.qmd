---
title: The Shopping List
date: '2023-09-23'
date-format: long
description: <em>List of items I will need to use for my project.</em>
toc: true
page-layout: full
---

```{python}
# code for calculating estimated total
import textwrap

class Item:
  Name = ""
  Description = ""
  Qty = 0
  UnitPrice = 0.00
  Shipping = 0.00
  def __init__(self, Name_, Description_, Qty_, UnitPrice_, Shipping_):
    self.Name = Name_
    self.Description = Description_
    self.Qty = Qty_
    self.UnitPrice = UnitPrice_
    self.Shipping = Shipping_

items = [
  Item(
    "V105Q131A-940 VCSEL Laser Array",
    "Sub-millimeter VCSEL laser array (https://www.mouser.com/ProductDetail/ams-OSRAM/V105Q131A-940?qs=A6eO%252BMLsxmSMav0sPIh%252B3g%3D%3D&countryCode=US&currencyCode=USD)",
    1,
    13.49,
    7.99,
  ),
  Item(
    "Adafruit VL53L4CX Time of Flight Distance Sensor",
    "I2C proximity sensor (https://www.adafruit.com/product/5425)",
    15,
    13.46,
    2.00,
  ),
  Item(
    "STEMMA QT / Qwiic JST SH 4-pin to Premium Male Headers Cable - 150mm Long",
    "Output I2C cable to plug into microcontroller/computer (https://www.adafruit.com/product/4209)",
    1,
    0.95,
    2.00,
  ),
  Item(
    "STEMMA QT / Qwiic JST SH 4-Pin Cable - 50mm Long",
    "I2C cable for daisy chaining ToF sensors (https://www.adafruit.com/product/4399)",
    7,
    0.95,
    2.00,
  ),
  Item(
    "STEMMA QT / Qwiic JST SH 4-pin Cable - 100mm Long",
    "I2C cable for connecting largest distance between ToF sensors (https://www.adafruit.com/product/4210)",
    1,
    0.95,
    2.00,
  ),
  Item(
    "HQProp DP Light Blue 5x4.5x3 V3 Propeller",
    "Durable polycarbonate propellers. Set of 4. 5in diameter, 4.5in pitch, 3 blades (https://www.getfpv.com/hqprop-dp-light-blue-5x4-5x3-v3-propeller-3-blade-set-of-4-pc.html)",
    4,
    2.99,
    5.99,
  ),
  Item(
    "12mm - Sande Plywood (1/2in)",
    "Plywood Sheet 4x8 feet. (https://www.homedepot.com/p/SANDEPLY-12mm-Sande-Plywood-1-2-in-Category-x-4-ft-x-8-ft-Actual-0-472-in-x-48-in-x-96-in-454532/203414055)",
    4,
    45.55,
    0.00,
  ),
  Item(
    "T25 Wood Screws",
    "#10 x 2-1/2-in T25, Flat Head, Deck-Drive DSV Wood Screw, Quik Guard, Tan (80-Pack) (https://www.homedepot.com/p/Simpson-Strong-Tie-10-x-2-1-2-in-T25-Flat-Head-Deck-Drive-DSV-Wood-Screw-Quik-Guard-Tan-80-Pack-DSVT212R80/321563372)",
    2,
    9.68,
    0.00,
  ),
]

grand_total = 0.00

headers = [[title for title in vars(items[0]).keys()]]
itemsExtracted = [vars(item) for item in items]
tax = 0.06
char_width = 36

wrapper = textwrap.TextWrapper(width=char_width, subsequent_indent=" " * 2)
for item in itemsExtracted:
  print("-" * char_width)
  for key in item:
    print(wrapper.fill(text = f"{key}: {item[key]}"))
  subtotal = item["Qty"] * item["UnitPrice"] + item["Shipping"]
  total = subtotal * (1 + tax)

  grand_total += total

  subtotal_formatted = f"${subtotal:,.2f}"
  tax_formatted =      f" {tax:,.2f}"
  total_formatted =    f"${total:,.2f}"

  print(f"{item['Qty']} @ ${item['UnitPrice']:,.2f} + ${item['Shipping']:,.2f} =")
  print(f"                Subtotal: {subtotal_formatted:>8}")
  print(f"                Tax:      {tax_formatted:>8}")
  print(f"                Total:    {total_formatted:>8}")

grand_total_formatted = f"${grand_total:,.2f}"
print("-" * char_width)
print("|" + (" " * (char_width - 2)) + "|")
print("|" + f" GRAND TOTAL: {grand_total_formatted:>19} " + "|")
print("|" + (" " * (char_width - 2)) + "|")
print("-" * char_width)
```
